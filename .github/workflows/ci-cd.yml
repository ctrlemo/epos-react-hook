name: CI/CD Pipeline

on:
    push:
        branches: [master, main]
    pull_request:
        branches: [master, main]
    release:
        types: [published, created, released] # Accept multiple release types

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [20.x, 22.x]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build package
              run: npm run build

            - name: Run tests
              run: npm test

            - name: Upload coverage reports
              if: matrix.node-version == '20.x'
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage/lcov.info
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: false

    publish:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'release' && !github.event.release.draft && !github.event.release.prerelease

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Use Node.js 20.x
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  registry-url: "https://registry.npmjs.org"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Build package
              run: npm run build

            - name: Run tests
              run: npm test

            - name: Debug Release Event
              run: |
                  echo "Event name: ${{ github.event_name }}"
                  echo "Event action: ${{ github.event.action }}"
                  echo "Release tag: ${{ github.event.release.tag_name }}"
                  echo "Release name: ${{ github.event.release.name }}"
                  echo "Release draft: ${{ github.event.release.draft }}"
                  echo "Release prerelease: ${{ github.event.release.prerelease }}"

            - name: Publish to npm
              run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Publish Summary
              run: |
                  echo "## ðŸ“¦ Package Published Successfully!" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Version:** ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
                  echo "**npm Package:** [@ctrlemo/epos-react-hook](https://www.npmjs.com/package/@ctrlemo/epos-react-hook)" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Installation" >> $GITHUB_STEP_SUMMARY
                  echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
                  echo "npm install @ctrlemo/epos-react-hook@latest" >> $GITHUB_STEP_SUMMARY
                  echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
