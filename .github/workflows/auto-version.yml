name: Auto Version Bump

on:
    push:
        branches: [master, main]
        paths-ignore:
            - "package.json"
            - "package-lock.json"
            - "CHANGELOG.md"

jobs:
    bump-version:
        if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Use Node.js 20.x
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test

            - name: Build package
              run: npm run build

            - name: Determine version bump type
              id: bump
              run: |
                  if [[ "${{ github.event.head_commit.message }}" == *"BREAKING CHANGE"* ]] || [[ "${{ github.event.head_commit.message }}" == *"major:"* ]]; then
                    echo "type=major" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.event.head_commit.message }}" == *"feat:"* ]] || [[ "${{ github.event.head_commit.message }}" == *"feature:"* ]]; then
                    echo "type=minor" >> $GITHUB_OUTPUT
                  else
                    echo "type=patch" >> $GITHUB_OUTPUT
                  fi

            - name: Bump version and create tag
              id: version
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  NEW_VERSION=$(npm version ${{ steps.bump.outputs.type }} -m "chore: bump version to %s [skip ci]" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
                  echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
                  git push origin master --tags

            - name: Create Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ steps.version.outputs.new_version }}
                  release_name: Release v${{ steps.version.outputs.new_version }}
                  body: |
                      Automated release created by GitHub Actions

                      Changes in this Release:
                      ${{ github.event.head_commit.message }}
                  draft: false
                  prerelease: false
